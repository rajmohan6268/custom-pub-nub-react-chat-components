{"code":"import { __awaiter, __generator, __spreadArray } from \"tslib\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { usePubNub } from \"pubnub-react\";\r\nimport merge from \"lodash.merge\";\r\nimport mergeWith from \"lodash.mergewith\";\r\nimport cloneDeep from \"lodash.clonedeep\";\r\nimport setDeep from \"lodash.set\";\r\nexport var useMessages = function (options) {\r\n    var pubnub = usePubNub();\r\n    var _a = useState(function () {\r\n        var initial = {};\r\n        options.channels.forEach(function (channel) { return (initial[channel] = []); });\r\n        return initial;\r\n    }), messages = _a[0], setMessages = _a[1];\r\n    var _b = useState(undefined), page = _b[0], setPage = _b[1];\r\n    var _c = useState(false), fetchedAll = _c[0], setFetchedAll = _c[1];\r\n    var _d = useState(), error = _d[0], setError = _d[1];\r\n    var mandatoryOptions = {\r\n        start: page,\r\n    };\r\n    var mergedOptions = merge(options, mandatoryOptions);\r\n    var command = function () { return __awaiter(void 0, void 0, void 0, function () {\r\n        var response, newMessages, earliestMessageTimetokens, lastTimetoken, e_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 2, , 3]);\r\n                    if (fetchedAll)\r\n                        return [2 /*return*/];\r\n                    return [4 /*yield*/, pubnub.fetchMessages(mergedOptions)];\r\n                case 1:\r\n                    response = _a.sent();\r\n                    newMessages = mergeWith({}, messages, response.channels, mergeMessageArray);\r\n                    earliestMessageTimetokens = Object.values(response.channels)\r\n                        .flatMap(function (ary) { return ary[0]; })\r\n                        .map(function (a) { return a.timetoken; });\r\n                    lastTimetoken = Math.min.apply(Math, earliestMessageTimetokens);\r\n                    setMessages(newMessages);\r\n                    setPage(lastTimetoken - 1);\r\n                    setFetchedAll(!Object.keys(response.channels).length);\r\n                    return [3 /*break*/, 3];\r\n                case 2:\r\n                    e_1 = _a.sent();\r\n                    setError(e_1);\r\n                    return [3 /*break*/, 3];\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    var handleMessage = function (message) {\r\n        try {\r\n            setMessages(function (messages) {\r\n                var messagesClone = cloneDeep(messages);\r\n                if (!messagesClone[message.channel])\r\n                    messagesClone[message.channel] = [];\r\n                messagesClone[message.channel].push(message);\r\n                return messagesClone;\r\n            });\r\n        }\r\n        catch (e) {\r\n            setError(e);\r\n        }\r\n    };\r\n    var handleAction = function (action) {\r\n        try {\r\n            if (!messages[action.channel])\r\n                return;\r\n            setMessages(function (messages) {\r\n                var _a, _b;\r\n                var channel = action.channel, event = action.event;\r\n                var _c = action.data, type = _c.type, value = _c.value, actionTimetoken = _c.actionTimetoken, messageTimetoken = _c.messageTimetoken, uuid = _c.uuid;\r\n                var messagesClone = cloneDeep(messages);\r\n                var message = messagesClone[channel].find(function (m) { return m.timetoken === messageTimetoken; });\r\n                var actions = ((_b = (_a = message === null || message === void 0 ? void 0 : message.actions) === null || _a === void 0 ? void 0 : _a[type]) === null || _b === void 0 ? void 0 : _b[value]) || [];\r\n                if (message && event === \"added\") {\r\n                    var newActions = __spreadArray(__spreadArray([], actions, true), [{ uuid: uuid, actionTimetoken: actionTimetoken }], false);\r\n                    setDeep(message, [\"actions\", type, value], newActions);\r\n                }\r\n                if (message && event === \"removed\") {\r\n                    var newActions = actions.filter(function (a) { return a.actionTimetoken !== actionTimetoken; });\r\n                    newActions.length\r\n                        ? setDeep(message, [\"actions\", type, value], newActions)\r\n                        : delete message.actions[type][value];\r\n                }\r\n                return messagesClone;\r\n            });\r\n        }\r\n        catch (e) {\r\n            setError(e);\r\n        }\r\n    };\r\n    var listener = useRef({\r\n        message: handleMessage,\r\n        messageAction: handleAction,\r\n    });\r\n    useEffect(function () {\r\n        command();\r\n        pubnub.addListener(listener.current);\r\n        return function () {\r\n            pubnub.removeListener(listener.current);\r\n        };\r\n    }, [pubnub]);\r\n    return [messages, command, error];\r\n};\r\nvar mergeMessageArray = function (oldMessages, newMessages) {\r\n    if (Array.isArray(oldMessages)) {\r\n        return __spreadArray(__spreadArray([], oldMessages, true), newMessages, true).sort(function (a, b) { return a.timetoken - b.timetoken; });\r\n    }\r\n};\r\n//# sourceMappingURL=use-messages.js.map","references":["/Users/rajmohan/Desktop/edvoy/rnd/react-chat-components/node_modules/@types/react/index.d.ts","/Users/rajmohan/Desktop/edvoy/rnd/react-chat-components/node_modules/@types/pubnub/index.d.ts","/Users/rajmohan/Desktop/edvoy/rnd/react-chat-components/node_modules/pubnub-react/dist/index.d.ts","/Users/rajmohan/Desktop/edvoy/rnd/react-chat-components/lib/src/types.ts","/Users/rajmohan/Desktop/edvoy/rnd/react-chat-components/node_modules/lodash.merge/index.js","/Users/rajmohan/Desktop/edvoy/rnd/react-chat-components/node_modules/lodash.mergewith/index.js","/Users/rajmohan/Desktop/edvoy/rnd/react-chat-components/node_modules/lodash.clonedeep/index.js","/Users/rajmohan/Desktop/edvoy/rnd/react-chat-components/node_modules/lodash.set/index.js"],"map":"{\"version\":3,\"file\":\"use-messages.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/hooks/use-messages.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/rajmohan/Desktop/edvoy/rnd/react-chat-components/lib/node_modules/.cache/rollup-plugin-typescript2/placeholder/hooks/use-messages.d.ts","writeByteOrderMark":false,"text":"import { FetchMessagesParameters } from \"pubnub\";\r\nimport { MessageEnvelope } from \"../types\";\r\ninterface MessagesByChannel {\r\n    [channel: string]: MessageEnvelope[];\r\n}\r\ndeclare type HookReturnValue = [MessagesByChannel, () => Promise<void>, Error];\r\nexport declare const useMessages: (options: FetchMessagesParameters) => HookReturnValue;\r\nexport {};\r\n"}}
