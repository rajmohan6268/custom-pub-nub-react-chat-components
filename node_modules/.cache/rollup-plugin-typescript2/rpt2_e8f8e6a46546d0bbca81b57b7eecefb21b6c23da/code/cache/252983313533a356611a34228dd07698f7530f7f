{"code":"import { __awaiter, __generator, __spreadArray } from \"tslib\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { usePubNub } from \"pubnub-react\";\r\nimport merge from \"lodash.merge\";\r\nimport cloneDeep from \"lodash.clonedeep\";\r\nexport var useChannels = function (options) {\r\n    if (options === void 0) { options = {}; }\r\n    var pubnub = usePubNub();\r\n    var _a = useState([]), channels = _a[0], setChannels = _a[1];\r\n    var _b = useState(\"\"), page = _b[0], setPage = _b[1];\r\n    var _c = useState(0), totalCount = _c[0], setTotalCount = _c[1];\r\n    var _d = useState(), error = _d[0], setError = _d[1];\r\n    var _e = useState(true), doFetch = _e[0], setDoFetch = _e[1];\r\n    var paginatedOptions = merge({}, options, {\r\n        page: { next: page },\r\n        include: { totalCount: true },\r\n    });\r\n    var fetchMoreChannels = function () {\r\n        setDoFetch(true);\r\n    };\r\n    useEffect(function () {\r\n        var ignoreRequest = false;\r\n        if (doFetch)\r\n            fetchPage();\r\n        function fetchPage() {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var response_1, e_1;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            _a.trys.push([0, 2, , 3]);\r\n                            if (totalCount && channels.length >= totalCount)\r\n                                return [2 /*return*/];\r\n                            return [4 /*yield*/, pubnub.objects.getAllChannelMetadata(paginatedOptions)];\r\n                        case 1:\r\n                            response_1 = _a.sent();\r\n                            if (ignoreRequest)\r\n                                return [2 /*return*/];\r\n                            setDoFetch(false);\r\n                            setChannels(function (channels) { return __spreadArray(__spreadArray([], channels, true), response_1.data, true); });\r\n                            setTotalCount(response_1.totalCount);\r\n                            setPage(response_1.next);\r\n                            return [3 /*break*/, 3];\r\n                        case 2:\r\n                            e_1 = _a.sent();\r\n                            setDoFetch(false);\r\n                            setError(e_1);\r\n                            return [3 /*break*/, 3];\r\n                        case 3: return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        return function () {\r\n            ignoreRequest = true;\r\n        };\r\n    }, [channels.length, doFetch, paginatedOptions, pubnub.objects, totalCount]);\r\n    useEffect(function () {\r\n        var listener = {\r\n            objects: function (event) {\r\n                var message = event.message;\r\n                if (message.type !== \"channel\")\r\n                    return;\r\n                setChannels(function (channels) {\r\n                    var channelsCopy = cloneDeep(channels);\r\n                    var channel = channelsCopy.find(function (ch) { return ch.id === event.channel; });\r\n                    // Set events are only handled for already fetched channels in order to conform to filters and pagination\r\n                    if (channel && message.event === \"set\") {\r\n                        Object.assign(channel, message.data);\r\n                    }\r\n                    if (channel && message.event === \"delete\") {\r\n                        channelsCopy.splice(channelsCopy.indexOf(channel), 1);\r\n                    }\r\n                    return channelsCopy;\r\n                });\r\n            },\r\n        };\r\n        pubnub.addListener(listener);\r\n        return function () {\r\n            pubnub.removeListener(listener);\r\n        };\r\n    }, [pubnub]);\r\n    return [channels, fetchMoreChannels, totalCount, error];\r\n};\r\n//# sourceMappingURL=use-channels.js.map","references":["/Users/rajmohan/Desktop/edvoy/rnd/react-chat-components/node_modules/@types/react/index.d.ts","/Users/rajmohan/Desktop/edvoy/rnd/react-chat-components/node_modules/@types/pubnub/index.d.ts","/Users/rajmohan/Desktop/edvoy/rnd/react-chat-components/node_modules/pubnub-react/dist/index.d.ts","/Users/rajmohan/Desktop/edvoy/rnd/react-chat-components/node_modules/lodash.merge/index.js","/Users/rajmohan/Desktop/edvoy/rnd/react-chat-components/node_modules/lodash.clonedeep/index.js","/Users/rajmohan/Desktop/edvoy/rnd/react-chat-components/lib/src/types.ts"],"map":"{\"version\":3,\"file\":\"use-channels.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/hooks/use-channels.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/rajmohan/Desktop/edvoy/rnd/react-chat-components/lib/node_modules/.cache/rollup-plugin-typescript2/placeholder/hooks/use-channels.d.ts","writeByteOrderMark":false,"text":"import { GetAllMetadataParameters } from \"pubnub\";\r\nimport { ChannelEntity } from \"../types\";\r\ndeclare type HookReturnValue = [ChannelEntity[], () => void, number, Error];\r\nexport declare const useChannels: (options?: GetAllMetadataParameters) => HookReturnValue;\r\nexport {};\r\n"}}
